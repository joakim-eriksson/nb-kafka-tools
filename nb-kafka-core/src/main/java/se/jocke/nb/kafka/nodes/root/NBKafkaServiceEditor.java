package se.jocke.nb.kafka.nodes.root;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import org.openide.explorer.propertysheet.PropertySheet;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.nodes.Node;
import org.openide.nodes.Sheet;
import se.jocke.nb.kafka.config.ClientConnectionConfig;
import se.jocke.nb.kafka.config.ClientConnectionConfigPropertySupport;

/**
 *
 * @author jocke
 */
public class NBKafkaServiceEditor extends javax.swing.JPanel {

    private final Map<ClientConnectionConfig, Object> props;

    /**
     * Creates new form EditKafkaServicePanel
     */
    public NBKafkaServiceEditor() {
        this.props = new LinkedHashMap<>();
        initComponents();
        PropertySheet kps = (PropertySheet) propertiesPanel;
        AbstractNode abstractNode = new AbstractNode(Children.LEAF) {
            @Override
            public Node.PropertySet[] getPropertySets() {
                Sheet.Set set = Sheet.createPropertiesSet();
                set.setDisplayName("Connection config");
                Arrays.asList(ClientConnectionConfig.values())
                        .stream()
                        .map(conf -> new ClientConnectionConfigPropertySupport(conf, props))
                        .forEach(set::put);
                return new PropertySet[]{set};
            }
        };

        kps.setNodes(new Node[]{abstractNode});
    }

    public Map<ClientConnectionConfig, Object> getProps() {
        return new LinkedHashMap<>(props);
    }

    public String getServiceName() {
        return nameTextField.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        propertiesPanel = new PropertySheet();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(NBKafkaServiceEditor.class, "NBKafkaServiceEditor.jLabel1.text")); // NOI18N

        nameTextField.setText(org.openide.util.NbBundle.getMessage(NBKafkaServiceEditor.class, "NBKafkaServiceEditor.nameTextField.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(propertiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(propertiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPanel propertiesPanel;
    // End of variables declaration//GEN-END:variables
}
