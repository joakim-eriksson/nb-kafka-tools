package se.jocke.nb.kafka.window;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import se.jocke.nb.kafka.nodes.topics.KafkaTopic;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//se.jocke.nb.kafka.window//Records//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = RecordsTopComponent.RECORDS_TOP_COMPONENT_ID,
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "se.jocke.nb.kafka.window.RecordsTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_RecordsAction",
        preferredID = "RecordsTopComponent"
)
@Messages({
    "CTL_RecordsAction=Records",
    "CTL_RecordsTopComponent=Records Window",
    "HINT_RecordsTopComponent=This is a Records window"
})
public final class RecordsTopComponent extends TopComponent {

    public static final String RECORDS_TOP_COMPONENT_ID = "RecordsTopComponent";

    public RecordsTopComponent() {
        initComponents();
        setName(Bundle.CTL_RecordsTopComponent());
        setToolTipText(Bundle.HINT_RecordsTopComponent());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        requestActive();
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    public void showTopic(KafkaTopic topic) {
        setDisplayName(topic.getName());
        open();
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
